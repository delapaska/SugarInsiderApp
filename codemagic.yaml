workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: SugarInsederApp
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.sugarinsiderapp.ivanchai
      vars:
        BUNDLE_ID: "com.sugarinsiderapp.ivanchai"
        XCODE_WORKSPACE: "SugarInsiderApp.xcworkspace"
        XCODE_SCHEME: "SugarInsiderApp"
        APP_STORE_APPLE_ID: 6753351573
        CM_CERTIFICATE: SugarInsiderApp
        CM_PROVISIONING_PROFILE: SugarInsiderApp
      node: latest
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain
        script: keychain initialize

      - name: Install npm dependencies
        script: |
          npm install

      - name: Clear Metro cache
        script: |
          rm -rf node_modules/.cache
          rm -rf /tmp/metro-*
          rm -rf /tmp/haste-map-*

      - name: Create assets folder with app icons
        script: |
          mkdir -p assets
          # Copy your actual icon instead of using placeholder
          cp icon.png assets/icon.png
          cp icon.png assets/splash.png
          # Create adaptive icon for Android compatibility (though we're iOS only)
          cp icon.png assets/adaptive-icon.png
          echo "âœ… Created assets folder with actual app icons"


      - name: Remove old iOS folder
        script: |
          rm -rf ios
          rm -rf android

      - name: Show version info
        script: |
          echo "ðŸ“± App version from app.json:"
          cat app.json | grep -A 5 '"version"'
          echo ""

      - name: Run Expo Prebuild
        script: |
          npx expo prebuild --platform ios --clean

      - name: Add privacy permissions to Info.plist
        script: |
          PLIST=$CM_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist
          PLIST_BUDDY=/usr/libexec/PlistBuddy

          # Add photo library usage description
          $PLIST_BUDDY -c "Add :NSPhotoLibraryUsageDescription string 'This app needs access to photo library to save and share your dietary records and reports.'" $PLIST || true

          # Add camera usage description (just in case)
          $PLIST_BUDDY -c "Add :NSCameraUsageDescription string 'This app needs access to camera to capture photos of your meals for dietary tracking.'" $PLIST || true

          echo "âœ… Added privacy permissions to Info.plist"

      - name: Patch react-native-iap podspec
        script: |
          RNIAP_PODSPEC=$(find node_modules -name "react-native-iap.podspec" -o -name "RNIap.podspec" | head -n 1)
          if [ -f "$RNIAP_PODSPEC" ]; then
            sed -i '' "/RCT-Folly/d" "$RNIAP_PODSPEC"
            echo "âœ… Patched $RNIAP_PODSPEC"
          fi

      - name: Patch Podfile
        script: |
          cd ios
          ruby -i -pe 'print "source '\''https://github.com/CocoaPods/Specs.git'\''\n\n" if $. == 1' Podfile


      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install --repo-update

      - name: Fetch signing files from Codemagic
        script: |
          keychain add-certificates
          xcode-project use-profiles

      - name: Prebuild React Native bundle
        script: |
          export NODE_BINARY=$(which node)
          npx react-native bundle \
            --platform ios \
            --dev false \
            --entry-file index.js \
            --bundle-output $CM_BUILD_DIR/ios/main.jsbundle \
            --assets-dest $CM_BUILD_DIR/ios

      - name: Build ipa with xcode-project
        script: |
          export NODE_BINARY=$(which node)
          export SKIP_BUNDLING=1
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --config "Release"


    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      email:
        recipients:
          - delapaska12@yandex.ru
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: true