workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: SugarInsederApp
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.sugarinsiderapp.ivanchai
      vars:
        BUNDLE_ID: "com.sugarinsiderapp.ivanchai"
        XCODE_WORKSPACE: "SugarInsiderApp.xcworkspace"
        XCODE_SCHEME: "SugarInsiderApp"
        APP_STORE_APPLE_ID: 6753351573
        CM_CERTIFICATE: SugarInsiderApp
        CM_PROVISIONING_PROFILE: SugarInsiderApp
        MARKETING_VERSION: "1.0.0"
        BUILD_NUMBER: "7"
      node: latest
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain
        script: keychain initialize

      - name: Install npm dependencies
        script: | 
          npm install

      - name: Clear Metro cache
        script: |
          rm -rf node_modules/.cache
          rm -rf /tmp/metro-*
          rm -rf /tmp/haste-map-*

      - name: Create placeholder assets
        script: |
          mkdir -p assets
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/icon.png
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/splash.png
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/adaptive-icon.png

      - name: Update app.json with version info
        script: |
          cat > app.json << 'EOF'
          {
            "expo": {
              "name": "SugarInsiderApp",
              "slug": "sugar-insider-app",
              "version": "MARKETING_VERSION_PLACEHOLDER",
              "orientation": "portrait",
              "icon": "./assets/icon.png",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#ffffff"
              },
              "ios": {
                "bundleIdentifier": "com.sugarinsiderapp.ivanchai",
                "buildNumber": "BUILD_NUMBER_PLACEHOLDER"
              },
              "android": {
                "package": "com.sugarinsiderapp.ivanchai"
              }
            }
          }
          EOF
          
          sed -i '' "s/MARKETING_VERSION_PLACEHOLDER/$MARKETING_VERSION/" app.json
          sed -i '' "s/BUILD_NUMBER_PLACEHOLDER/$BUILD_NUMBER/" app.json
          
          echo "Created app.json with version $MARKETING_VERSION ($BUILD_NUMBER)"
          cat app.json

      - name: Run Expo Prebuild (keep existing ios folder)
        script: | 
          if [ ! -d "ios" ]; then
            npx expo prebuild --platform ios
          else
            echo "iOS folder exists, skipping prebuild to preserve project settings"
          fi

      - name: Patch react-native-iap podspec
        script: |
          RNIAP_PODSPEC=$(find node_modules -name "react-native-iap.podspec" -o -name "RNIap.podspec" | head -n 1)
          if [ -f "$RNIAP_PODSPEC" ]; then
            sed -i '' "/RCT-Folly/d" "$RNIAP_PODSPEC"
          fi

      - name: Patch Podfile
        script: |
          cd ios
          if ! grep -q "source 'https://github.com/CocoaPods/Specs.git'" Podfile; then
            ruby -i -pe 'print "source '\''https://github.com/CocoaPods/Specs.git'\''\n\n" if $. == 1' Podfile
          fi

      - name: Set Marketing Version and Build Number
        script: | 
          INFO_PLIST="$CM_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist"
          PLB=/usr/libexec/PlistBuddy
          
          echo "Setting MARKETING_VERSION to $MARKETING_VERSION"
          $PLB -c "Set :CFBundleShortVersionString $MARKETING_VERSION" "$INFO_PLIST" || \
          $PLB -c "Add :CFBundleShortVersionString string $MARKETING_VERSION" "$INFO_PLIST"
          
          echo "Setting BUILD_NUMBER to $BUILD_NUMBER"
          cd "$CM_BUILD_DIR/ios"
          agvtool new-version -all $BUILD_NUMBER
          
          echo "Adding ITSAppUsesNonExemptEncryption"
          $PLB -c "Add :ITSAppUsesNonExemptEncryption bool false" "$INFO_PLIST" || true

      - name: Install CocoaPods dependencies
        script: | 
          cd ios
          pod install --repo-update

      - name: Fetch signing files from Codemagic
        script: |
          keychain add-certificates
          xcode-project use-profiles

      - name: Verify build settings
        script: | 
          cd $CM_BUILD_DIR/ios
          echo "=== Final Info.plist values ==="
          /usr/libexec/PlistBuddy -c "Print :CFBundleShortVersionString" "$CM_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist"
          /usr/libexec/PlistBuddy -c "Print :CFBundleVersion" "$CM_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist"
          
          echo ""
          echo "=== Xcode build settings ==="
          xcodebuild -showBuildSettings \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" | grep -E "PRODUCT_BUNDLE_IDENTIFIER|MARKETING_VERSION|CURRENT_PROJECT_VERSION"

      - name: Prebuild React Native bundle
        script: |
          export NODE_BINARY=$(which node)
          
          npx react-native bundle \
            --platform ios \
            --dev false \
            --entry-file index.js \
            --bundle-output $CM_BUILD_DIR/ios/main.jsbundle \
            --assets-dest $CM_BUILD_DIR/ios

      - name: Build ipa with xcode-project
        script: |
          export NODE_BINARY=$(which node)
          export SKIP_BUNDLING=1
          
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --config "Release"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      email:
        recipients:
          - your_email@example.com
        notify:
          success: true
          failure: true

      app_store_connect:
        auth: integration
        submit_to_testflight: false
        submit_to_app_store: false