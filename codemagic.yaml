workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: SugarInsederApp
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.sugarinsiderapp.ivanchai
      vars:
        BUNDLE_ID: "com.sugarinsiderapp.ivanchai"
        XCODE_WORKSPACE: "SugarInsiderApp.xcworkspace"
        XCODE_SCHEME: "SugarInsiderApp"
        APP_STORE_APPLE_ID: 6753351573
      node: latest
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain
        script: keychain initialize

      - name: Install npm dependencies
        script: | 
          npm install

      - name: Create placeholder assets
        script: |
          mkdir -p assets
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/icon.png
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/splash.png
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 --decode > assets/adaptive-icon.png

      - name: Remove old iOS folder
        script: |
          rm -rf ios
          rm -rf android

      - name: Run Expo Prebuild
        script: | 
          npx expo prebuild --platform ios

      - name: Patch react-native-iap podspec
        script: |
          RNIAP_PODSPEC=$(find node_modules -name "react-native-iap.podspec" -o -name "RNIap.podspec" | head -n 1)
          if [ -f "$RNIAP_PODSPEC" ]; then
            sed -i '' "/RCT-Folly/d" "$RNIAP_PODSPEC"
          fi

      - name: Patch Podfile
        script: |
          cd ios
          ruby -i -pe 'print "source '\''https://github.com/CocoaPods/Specs.git'\''\n\n" if $. == 1' Podfile

      - name: Set Info.plist values
        script: | 
          PLIST=$CM_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist
          PLIST_BUDDY=/usr/libexec/PlistBuddy
          $PLIST_BUDDY -c "Add :ITSAppUsesNonExemptEncryption bool false" $PLIST || true

      - name: Install CocoaPods dependencies
        script: | 
          cd ios
          pod install --repo-update

      - name: Fix deployment target
        script: |
          cd ios
          # Исправляем deployment target в Podfile
          sed -i '' "s/platform :ios, '.*'/platform :ios, '13.0'/" Podfile
          # Переустанавливаем поды с правильным deployment target
          pod install

      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles

      - name: Increment build number
        script: | 
          cd $CM_BUILD_DIR/ios
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))

      - name: Build ipa manually with full logs
        script: | 
          cd $CM_BUILD_DIR/ios
          
          xcodebuild archive \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath $CM_BUILD_DIR/build/ios/archive/SugarInsiderApp.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=Y33FQK27U3 \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            IPHONEOS_DEPLOYMENT_TARGET=13.0 \
            2>&1 | tee $CM_BUILD_DIR/xcodebuild.log
          
          BUILD_RESULT=${PIPESTATUS[0]}
          
          if [ $BUILD_RESULT -ne 0 ]; then
            echo "=== BUILD FAILED WITH CODE: $BUILD_RESULT ==="
            echo "=== Searching for errors in log ==="
            grep -i "error:" $CM_BUILD_DIR/xcodebuild.log | tail -20
            echo "=== Last 50 lines of build log ==="
            tail -50 $CM_BUILD_DIR/xcodebuild.log
            exit 1
          fi

      - name: Create ExportOptions.plist
        script: |
          cat > $CM_BUILD_DIR/ios/ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>Y33FQK27U3</string>
          </dict>
          </plist>
          EOF

      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/build/ios/archive/SugarInsiderApp.xcarchive \
            -exportPath $CM_BUILD_DIR/build/ios/ipa \
            -exportOptionsPlist $CM_BUILD_DIR/ios/ExportOptions.plist

    artifacts:
      - build/ios/ipa/*.ipa
      - xcodebuild.log

    publishing:
      email:
        recipients:
          - your_email@example.com
        notify:
          success: true
          failure: true

      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false